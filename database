import wixData from 'wix-data';

// DOM element handling
$w.onReady(function () {
  async function fetchData() {
    try {
      const results = await wixData.query("MyCollection")
        .limit(50)
        .find();
      
      if (results.items.length > 0) {
        const firstItem = results.items[0];
        console.log("First item:", firstItem);
        $w("#textElement").text(firstItem.title);
      } else {
        console.log("No items found");
      }
    } catch (error) {
      console.error("Failed to fetch data:", error);
    }
  }
  
  fetchData();
});

// Collection operations
async function insertItem(collectionName, itemData) {
  try {
    const result = await wixData.insert(collectionName, itemData);
    console.log(`Successfully inserted into ${collectionName}:`, result);
    return result;
  } catch (error) {
    console.error(`Failed to insert into ${collectionName}:`, error);
    throw error;
  }
}

// Multi-reference handling
async function createProduct(productData, personaIds) {
  try {
    const result = await wixData.create("Products", {
      ...productData,
      personas: personaIds.map(id => wixData.filterByField("Personas", "_id", id))
    });
    return result;
  } catch (error) {
    console.error("Failed to create product:", error);
    throw error;
  }
}

// Query functions
async function getProductsByPersona(personaId) {
  try {
    const persona = await wixData.get("Personas", personaId);
    if (!persona) {
      throw new Error(`Persona with ID ${personaId} not found`);
    }
    
    const query = wixData.query("Products")
      .hasSome("type", persona.interestedTypes)
      .limit(50)
      .sortby("_createdDate", "desc");
    
    const results = await query.find();
    return results.items;
  } catch (error) {
    console.error(`Failed to get products for persona ${personaId}:`, error);
    return [];
  }
}

async function getProductsByType(productType) {
  try {
    const results = await wixData.query("Products")
      .eq("type", productType)
      .limit(50)
      .find();
    return results.items;
  } catch (error) {
    console.error(`Failed to get products by type ${productType}:`, error);
    return [];
  }
}
